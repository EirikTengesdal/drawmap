% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_coordinates.R
\name{load_coordinates}
\alias{load_coordinates}
\title{Load map location coördinates from file}
\usage{
load_coordinates(
  data = NULL,
  path = list("data", "raw", "NDC_datapoints.csv"),
  sep = ";",
  sep_col = "Coordinates_WGS84",
  into = c("Latitude", "Longitude"),
  col_order = c("Longitude", "Latitude"),
  separate_sep = ",",
  factor_cols = c("County", "Place"),
  mutate_col = "Type",
  mutate_val = "Participant home town/self-defined dialect",
  mutate_after = "geometry"
)
}
\arguments{
\item{data}{An optional data frame containing coördinates, default is
\code{NULL}}

\item{path}{A list of character strings specifying the path to the CSV file,
default is \code{here::here("data", "raw", "NDC_datapoints.csv")}}

\item{sep}{The separator used in the CSV file, default is \code{";"}}

\item{sep_col}{The name of the column containing the coördinates, default is
\code{"Coordinates_WGS84"}}

\item{into}{A character vector of length 2 specifying the names of the
columns, default is \code{c("Latitude", "Longitude")}}

\item{col_order}{A character vector of length 2 specifying the order of the
columns, default is \code{c("Longitude", "Latitude")}}

\item{separate_sep}{The separator used to separate the coördinates into two
columns, default is \code{","}}

\item{factor_cols}{A character vector of column names to convert to factors,
default is \code{c("County", "Place")}}

\item{mutate_col}{The name of the column to mutate, default is \code{Type}}

\item{mutate_val}{The value to assign to the mutated column, default is
\code{"Participant home town/self-defined dialect"}}

\item{mutate_after}{The name of the column after which to insert the mutated
column, default is \code{"geometry"}}
}
\value{
An \code{sf} object with the coördinates as the geometry column
}
\description{
\code{load_coordinates()}: Load a CSV file containing named coördinates and
return an \code{sf} object. It uses \code{utils::read.csv()} to read the
data. In the function definition, it is assumed that the CSV file contains a
column named "Coordinates_WGS84" that contains the coördinates in the format
"Latitude, Longitude". The function uses \code{tidyr::separate()} to split
the coördinates into two separate columns, "Latitude" and "Longitude". The
function also assumes that the coördinates are in the WGS 84 format, and it
uses \code{sf::st_as_sf()} to convert the data to an \code{sf} object with
the coördinates as the geometry column.
}
